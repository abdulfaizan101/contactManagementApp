{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["Nav","page","className","id","MainPageNavPart","src","alt","type","ViewProfile","setPage","viewProf","setSetAllContact","allContact","dis","discription","num","name","priority","console","log","onClick","i","length","splice","AddProfile","useState","contact","setContact","buttonDisabled","ButtonDisabled","setButtonDisabled","validator","useRef","SimpleReactValidator","useEffect","current","allValid","validate","val","target","value","showMessageFor","onChange","placeholder","htmlFor","style","color","message","event","preventDefault","disabled","ContactList","setId","allList","sort","a","b","toUpperCase","firstChar","prevChar","arr","arrP","map","singleItem","index","charAt","push","div","ContactLst","EmergencyContacts","ContactManagement","setContactId","Math","random","App","contactId","setViewProf","filter","s","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.42fd0f11.chunk.js","sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport SimpleReactValidator from 'simple-react-validator';\n\nimport './App.css';\n\n\nfunction Nav({ page }) {\n  return (<>\n    <aside>\n      <ul>\n        <li><a >Link 1</a></li>\n        <li><a >Link 2</a></li>\n      </ul>\n    </aside>\n    <div className=\"my-navbar\">\n      <div className=\"hamburger\" id=\"nav-icon1\">\n        <span />\n        <span />\n        <span />\n      </div>\n      <h2 className=\"float-start\">Contact</h2>\n      {page === 1 ? <MainPageNavPart /> : ''}\n    </div>\n  </>);\n}\n\nfunction MainPageNavPart() {\n  return (\n    <div className=\"d-flex justify-content-between top-links-row\">\n      <a ><img src=\"assets/images/qr-code.svg\" alt=\"\" /></a>\n      <a ><i className=\"bi bi-search\" /></a>\n      <div className=\"dropdown\">\n        <button className=\"btn btn-link dropdown-toggle\" type=\"button\" id=\"dropdownMenuButton1\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\n          <i className=\"bi bi-three-dots-vertical\" />\n        </button>\n        <ul className=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton1\">\n          <li><a className=\"dropdown-item\" >Action</a></li>\n          <li><a className=\"dropdown-item\" >Another action</a></li>\n          <li><a className=\"dropdown-item\">Something else here</a></li>\n        </ul>\n      </div>\n    </div>);\n}\n\nfunction ViewProfile({ setPage, viewProf, setSetAllContact, allContact }) {\n  let dis = viewProf && viewProf.discription != null ? viewProf.discription : 'OOOO';\n  let num = viewProf && viewProf.name != null ? viewProf.name : 'OOOO';\n  let priority = viewProf && viewProf.priority != null ? viewProf.priority : 'OOOO';\n\n  console.log('KKKKKKKKK', allContact);\n  const edit = () => {\n    setPage(3)\n  }\n  const delet = () => {\n    console.log('sssssssssssssssss', allContact);\n    if (viewProf && viewProf.name != null) {\n      for (var i = 0; i < allContact.length; i++) {\n        if (allContact[i].id === viewProf.id) {\n          allContact.splice(i, 1);\n          break;\n        }\n      }\n      setSetAllContact([...allContact])\n    }\n    setPage(1)\n  }\n  return (<><div className=\"my-card\">\n    <h4>Description: {dis}</h4>\n    <h4>Phone Number: <a className={\"tel:\" + num}>{num}</a> </h4>\n    <h4>Priority: {priority}</h4>\n\n    <div className=\"btn-row d-flex justify-content-between\">\n      <button className=\"btn btn-link\" onClick={delet}>DELETE</button>\n      <button className=\"btn btn-link\" onClick={edit} >EDIT</button>\n    </div>\n    {/* <p className=\"text-end mb-0\"><a onClick={edit} className=\"btn btn-link\"> EDIT</a></p> */}\n  </div></>);\n}\n\nfunction AddProfile({ setPage, setSetAllContact, allContact, viewProf }) {\n  console.log('YYYYYYYYYY', allContact);\n  let [contact, setContact] = useState({ name: '', discription: '' });\n  const [ButtonDisabled, setButtonDisabled] = useState({ buttonDisabled: true });\n  const validator = useRef(new SimpleReactValidator())\n  useEffect(() => {\n    if (validator.current.allValid()) {\n      setButtonDisabled({ buttonDisabled: false });\n    } else {\n      setButtonDisabled({ buttonDisabled: true });\n    }\n  }, [contact])\n  useEffect(() => {\n    if (viewProf && viewProf.name != null) {\n      setContact({ ...viewProf });\n    }\n  }, [])\n  const validate = (val) => {\n    setContact({ ...contact, [val.target.name]: val.target.value });\n    validator.current.showMessageFor(val.target.name);\n  }\n\n  const cancel = (event) => {\n    event.preventDefault();\n    setPage(1)\n  }\n\n  const add = (event) => {\n    event.preventDefault();\n\n    if (viewProf && viewProf.name != null) {\n      for (var i = 0; i < allContact.length; i++) {\n        if (allContact[i].id === viewProf.id) {\n          allContact.splice(i, 1);\n          break;\n        }\n      }\n      setSetAllContact([...allContact, { ...contact, priority: '', id: viewProf.id }])\n    } else {\n      setSetAllContact([...allContact, { ...contact, priority: '', id: (allContact.length + 1) }])\n    }\n    console.log('ddddddddddddd', allContact);\n    setPage(1)\n  }\n  return (<><div className=\"my-card\">\n    <form>\n      <div className=\"input-group-fix\">\n        <div className=\"form-floating\">\n          <input type=\"text\" className=\"form-control\" name=\"name\" id=\"floatingInput\" onChange={validate} value={contact.name} placeholder=\"Phone number\" />\n          <label htmlFor=\"floatingInput\">Phone number</label>\n          <div className=\"form-group\" style={{ color: 'red' }}>\n            {validator.current.message('name', contact.name, 'required|phone')}\n          </div>\n        </div>\n        <div className=\"form-floating\">\n          <input type=\"text\" className=\"form-control\" name=\"discription\" id=\"floatingPassword\" onChange={validate} value={contact.discription} placeholder=\"Description\" />\n          <label htmlFor=\"floatingPassword\">Description</label>\n          <div className=\"form-group\" style={{ color: 'red' }}>\n            {validator.current.message('discription', contact.discription, 'required|alpha')}\n          </div>\n        </div>\n        {/* <div className=\"form-floating\">\n          <input type=\"text\" className=\"form-control\" id=\"floatingPassword\" placeholder=\"Priority\" />\n          <label htmlFor=\"floatingPassword\">Priority</label>\n        </div> */}\n      </div>\n      <div className=\"btn-row d-flex justify-content-between\">\n        <button className=\"btn btn-link\" onClick={cancel}  >CANCEL</button>\n        <button className=\"btn btn-link\" onClick={add} disabled={ButtonDisabled.buttonDisabled}>SUBMIT</button>\n      </div>\n    </form>\n  </div></>);\n}\n\n\nfunction ContactList({ page, setPage, allContact, setId }) {\n  const setPg = () => {\n    console.log('vvvvvvvvvvvvv', page);\n    setPage(3);\n  }\n  const profileView = (id) => {\n    console.log('ddddddddddddddddd', id);\n    setId(id)\n    setPage(2);\n  }\n\n\n  function ContactLst() {\n    let allList = allContact.sort((a, b) => a.discription.toUpperCase() > b.discription.toUpperCase() && 1 || -1)\n    let firstChar = '';\n    let prevChar = '';\n    let arr = [];\n    let arrP = [];\n    let a = allList.map((singleItem, index) => {\n      firstChar = singleItem.discription.charAt(0).toUpperCase();\n      return (<div key={index} className=\"contact\" onClick={() => { profileView(singleItem.id) }}>\n        <div className=\"letter color2\">{firstChar}</div>\n        <p>{singleItem.discription}</p>\n      </div>);\n    });\n    firstChar = '';\n    for (let i = 0; i < allList.length; i++) {\n      firstChar = allList[i].discription.charAt(0).toUpperCase();\n      if (i === (allList.length - 1)) {\n        if (firstChar != prevChar) {\n          arrP.push(<div className=\"contact-block\" key={prevChar}><p><b>{prevChar}</b></p>{arr}</div>)\n          arrP.push(<div className=\"contact-block\" key={firstChar}><p><b>{firstChar}</b></p>{a[i]}</div>)\n          break;\n        }\n\n        firstChar = '1'\n        arr.push(a[i]);\n      }\n      if (firstChar != prevChar && firstChar != '' && prevChar != '') {\n        let div = <div className=\"contact-block\" key={prevChar}><p><b>{prevChar}</b></p>{arr}</div>\n        arrP.push(div)\n        arr = [];\n      }\n      arr.push(a[i]);\n      prevChar = allList[i].discription.charAt(0).toUpperCase();\n    }\n    return arrP;\n  }\n  return (<div className=\"contact-container\">\n    <div className=\"contact-block\">\n      <p><b>What's new</b></p>\n      <div className=\"contact\">\n        <div className=\"letter color1\"><i className=\"bi bi-person\" /></div>\n        <p>Try sharing your profile </p>\n      </div>\n    </div>\n    {ContactLst()}\n    <div className=\"fixed-row\">\n      <a onClick={setPg} className=\"float-end\"><i className=\"bi bi-plus-circle-fill\" /></a>\n    </div>\n  </div>);\n}\n\nfunction EmergencyContacts({ page, setPage, setId, setSetAllContact, allContact, viewProf }) {\n  console.log('zzzzzzzzzzz', allContact);\n  const setPg = () => {\n    setPage(1)\n  }\n  return (<><h2 className=\"main-heading\">Emergency contacts</h2>\n    {page === 2 ? <ViewProfile setPage={setPage} setId={setId} setSetAllContact={setSetAllContact} allContact={allContact} viewProf={viewProf} /> : ''}\n    {page === 3 ? <AddProfile setPage={setPage} setSetAllContact={setSetAllContact} allContact={allContact} viewProf={viewProf} /> : ''}\n    <p className=\"text-center my-5\"><a onClick={setPg} className=\"text-blue\">BACK TO PROFILE</a></p></>\n  );\n}\n\nfunction ContactManagement({ page, setPage, setContactId, setSetAllContact, allContact, viewProf }) {\n  console.log('ContactManagement', Math.random(), page, allContact);\n  return (<>\n    <div className=\"wrapper\">\n      <div className=\"container\">\n        <Nav page={page} />\n        <div className=\"main-container\">\n          {page === 1 ? <ContactList setPage={setPage} allContact={allContact} setId={setContactId} /> : ''}\n          {page === 2 || page === 3 ? <EmergencyContacts setSetAllContact={setSetAllContact} viewProf={viewProf} allContact={allContact} setPage={setPage} page={page} setId={setContactId} /> : ''}\n        </div>\n      </div>\n    </div></>);\n}\n\n\n\nconsole.log('zaaaaaaaaaaa', Math.random());\nfunction App() {\n  let [page, setPage] = useState(1);\n  let [contactId, setContactId] = useState(null);\n  let [viewProf, setViewProf] = useState(null);\n  let [allContact, setSetAllContact] = useState([\n    { name: '+92324240344', discription: 'aabhh', priority: '', id: 1 },\n    { name: '+92324240344', discription: 'bbdul', priority: '', id: 2 },\n    { name: '+92324240344', discription: 'cbdul', priority: '', id: 3 },\n    { name: '+92324240344', discription: 'dbdul', priority: '', id: 4 },\n    { name: '+92324240344', discription: 'ebdul', priority: '', id: 5 },\n    { name: '+92324240344', discription: 'fbdul', priority: '', id: 6 },\n    { name: '+92324240344', discription: 'gbdul', priority: '', id: 7 },\n    { name: '+92324240344', discription: 'hcdul', priority: '', id: 8 }\n  ]);\n  useEffect(() => {\n    setViewProf(allContact.filter((s) => s.id == contactId)[0]);\n  }, [contactId])\n  useEffect(() => {\n    if (page == 1) {\n      setViewProf({});\n      setContactId(null);\n    }\n  }, [page])\n\n  console.log('APP', Math.random(), viewProf, contactId, page, allContact);\n  return (<ContactManagement allContact={allContact} viewProf={viewProf} setSetAllContact={setSetAllContact} page={page} setPage={setPage} contactId={contactId} setContactId={setContactId} />\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}